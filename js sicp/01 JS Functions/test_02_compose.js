/* 
С точки зрения математики, композиция функций f и g — новая функция z = f(g(x)).
Реализуйте и экспортируйте по умолчанию функцию compose, которая принимает на вход две других 
одно-аргументных функции и возвращает новую функцию. Эта новая функция также принимает на вход один параметр и
представляет собой композицию двух исходных одноаргументных функций 
(эти функции вызываются последовательно в обратном порядке: например, при порядке f, g ===> f(g(x))).

Примеры ниже помогут понять, как должна работать функция:

const f = compose(Math.sqrt, Math.abs);
f(-4); // 2

compose((v) => v, (v) => v)(10);         // 10
compose((v) => v + 2, (v) => v)(10);     // 12
compose((v) => v, v => (v) - 2)(10);     // 8
compose((v) => v ** 2, (v) => v - 2)(2); // 0
compose((v) => v - 2, (v) => v ** 2)(2); // 2 
*/

const compose = (f, g) => (arg) => f(g(arg));

const f = compose(Math.sqrt, Math.abs);
console.log(f(-4)); // 2

console.log(compose((v) => v - 2, (v) => v ** 2)(2));
console.log(compose((v) => v ** 2, (v) => v - 2)(2));